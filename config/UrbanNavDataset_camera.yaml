%YAML:1.0

# Project
project_name: "lvi_sam"

#common parameters
imu_topic: "/imu/data"
image_topic: "/zed2/camera/left/image_raw"
point_cloud_topic: "lvi_sam/lidar/deskew/cloud_deskewed"


# Lidar Params
use_lidar: 1                     # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 1 # align camera and lidar estimation for visualization
      
#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 672
image_height: 376
distortion_parameters:
   k1: -0.0442856
   k2:  0.0133574
   p1: 0
   p2: 0
projection_parameters:
   fx: 264.9425
   fy: 264.79
   cx: 334.3975
   cy: 183.162

#imu parameters       The more accurate parameters you provide, the worse performance
acc_n: 1.1197412605492375e-02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 1.0270904839480961e-02        # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 1.1751767903346351e-04        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 9.1355383994881894e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.78785    # gravity magnitude

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 9.9885234402635936e-01, 1.3591158885981787e-03,4.7876378696062108e-02, 
           -4.7864188349269129e-02, -7.9091258538426246e-03,9.9882253939420773e-01, 
           1.7361758877140372e-03, -9.9996779874765440e-01,-7.8349959194297103e-03]

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-8.4994249456545504e-02, 6.6169337079143220e-01, -3.0104266183335913e+00]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.035   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0           # online estimate time offset between camera and imu
td: 0                    # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0       # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0    # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
# NOTE: if start loop_closure for UrbanNav-HK-Data20200314.bag, it will be init failure, so close it.
loop_closure: 0                    # start loop closure
skip_time: 0.0
skip_dist: 0.0
debug_image: 0                      # save raw image in loop detector for visualization prupose; you can close this function by setting 0 
match_image_scale: 0.5
vocabulary_file: "/config/brief_k10L6.bin"
brief_pattern_file: "/config/brief_pattern.yml"
